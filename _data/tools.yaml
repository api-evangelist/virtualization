- tool_id: UB116GYDoetyOQNHLnwR0I2mvkqXNyHVTWfPF123vnGguvVC116Nj3esa3Jp4ciLYGs123W116U2SNZoNUquKnbCpNUu4b4A117117
  name: ALPS - Application-Level Profile Semantics
  user: ""
  details: The purpose of Application-Level Profile Semantics (ALPS) is to document
    the application-level semantics of a particular implementation. This is accomplished
    by describing elements of response representations for a target media type. For
    example identifying markup elements returned (i.e. semantic HTML ala Microformats)
    and state transitions (i.e. HTML.A and HTML.FORM elements) that advance the state
    of the current application.
  post_date: "2014-04-02 16:40:11"
  url: http://amundsen.com/hypermedia/profiles/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/alps-logo.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Semantics
  - Definitions
- tool_id: 123KEubtan6h5rv5VY116MP123123PiGxuZKxil2E076G123Fy8aG2zUkWekjk8YWSgaakJlHMruIMfRdSRcJZYGvMVjg3ng117117
  name: API Blueprint
  user: apiaryio
  details: "API Blueprint is a documentation-oriented API description language. A
    couple of semantic assumptions over the plain Markdown. API Blueprint is perfect
    for designing your Web API and its comprehensive documentation but also for quick
    prototyping and collaboration. It is easy to learn and even easier to read; after
    all,\u200B it is just a form of plain text."
  post_date: "2015-05-14 12:42:22"
  url: https://github.com/apiaryio/api-blueprint/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/bw-api-blueprint-icon.png
  forks: "629"
  followers: "2155"
  watchers: "2155"
  tags:
  - Specification
  - Design
  - Definitions
  - API Blueprint Core
  - API Blueprint
- tool_id: a54123nEtP1Fi3r7ExRo7zRP0WOZWp7h7123mBl3iNgIygnKN7MttWHc7D83NJGpq116uHqAXPHXWhtx116JkoZh69eQxg117117
  name: api-blueprint
  user: apiaryio
  details: API Blueprint
  post_date: "2016-07-17 15:21:42"
  url: https://api.github.com/repos/apiaryio/api-blueprint
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "1114"
  followers: "3974"
  watchers: "3974"
  tags:
  - GitHub
  - Definitions
- tool_id: dYp2qGQeaipw96cI9UsZcfr0DKhZX43sVhdJ44123tFtFgkjo8j0KXXfH2EC0oPwYQN4K3f58zOx6JPwSmddqVcA117117
  name: api-spec-converter
  user: stoplightio
  details: This package helps to convert between different API specifications (Postman,
    Swagger, RAML, StopLigh
  post_date: "2016-07-17 22:51:09"
  url: https://api.github.com/repos/stoplightio/api-spec-converter
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "3"
  followers: "14"
  watchers: "14"
  tags:
  - GitHub
  - Definitions
  - Converter
- tool_id: DYbI4KEKr5Nx0E5SNLPBCCz9P74XahwWGu5VyoLq8k11677AsjKOe9d116oZL1IfPZv70Zb0duHxbfd1rZb5z4Rz8Q117117
  name: Apiary Blueprint Parser
  user: ""
  details: A JavaScript parser of Apiary API blueprints. Uses Node.js then in browser,
    include the browser version of the parser in your web page or application using
    the script tag. To parse an API blueprint, just call the parse method and pass
    the blueprint as a parameter. The method will return an object representing the
    parsed blueprint or throw an exception if the input is invalid.
  post_date: "2013-06-12 18:42:12"
  url: https://github.com/apiaryio/blueprint-parser
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/bw-api-blueprint-icon.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Parser
  - Definitions
  - API Blueprint
- tool_id: G65WDT7O116kf6R5Wbz0UIEv3c61z116xCJ9Ff3wqjuWCwCemVLXfJWc116ybfgnMWqpfzoOPsN4XB6116fJaco0cQbPsA117117
  name: APIs.json
  user: ""
  details: APIs are becoming a crucial part of the Web. Unfortunately however, it
    remains very difficult to determine the location of these APIs on servers around
    the Web. The only way to discover APIs and their properties is via human driven
    search through public search engines or in hand curated API Directory listings.
    While these methods work, neither can scale to the potentially hundreds of thousands
    and millions of APIs which will be published over the next few years.
  post_date: "2014-06-15 17:00:37"
  url: http://apisjson.org/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/apisdotjson.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Discovery
  - Definitions
- tool_id: aiQ8kH4Rqvw3jw8fSrMi8pTgkvs7MnFysioRZ0uo0f1klPBKoqcMC116zZzQRXH7Gd1JzzB2eSmB0KWTkVFHz1166A117117
  name: Barrister RPC
  user: ""
  details: Barrister is a RPC system that uses an external interface definition (IDL)
    file to describe the interfaces and data structures that a component implements.
    It is similar to tools like Protocol Buffers, Thrift, Avro, and SOAP.
  post_date: "2015-07-30 23:36:22"
  url: http://barrister.bitmechanic.com/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/barrister-rpc.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Design
  - Definitions
- tool_id: XjeWKXuMj4hbu7LCp1TXcPt1UTlQK6VvS8R116zGK1qV9wHc57Bzt6E98CKQNVro4Rwwq0Zl3pYgTYEYmsExm9Qg117117
  name: certificate-transparency-rfcs
  user: google
  details: Certificate Transparency RFC
  post_date: "2016-07-17 23:23:45"
  url: https://api.github.com/repos/google/certificate-transparency-rfcs
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "19"
  followers: "41"
  watchers: "41"
  tags:
  - GitHub
  - Encryption
  - Definitions
- tool_id: cdJFKZiWDZMDeIqF7sJp2T2Rvjuqy123fSxHPkGrLBObtiPCgUq06XJj123AltAockqaWfCGAMUyT6xHHIicdGGecw117117
  name: chef-server-schema
  user: chef
  details: SQL Schema for the Open Source Chef Server
  post_date: "2016-07-17 22:39:38"
  url: https://api.github.com/repos/chef/chef-server-schema
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "0"
  followers: "1"
  watchers: "1"
  tags:
  - Schema
  - GitHub
  - Definitions
- tool_id: 123wJlc116jjvqsV3SHE6DBcci52uyXGlFJ737MSvSINji6IU2O7VSH3OkR81wla3Ga1qeMOx4NgnORQV5szoF9116wg117117
  name: Collection+JSON
  user: ""
  details: Collection+JSON is a JSON-based read/write hypermedia-type designed to
    support management and querying of simple collections.
  post_date: "2014-07-25 18:07:45"
  url: http://amundsen.com/media-types/collection/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: https://github.com/collection-json
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/madmen_icon_400x400.jpg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Media Type
  - Hypermedia
  - Design
  - Definitions
- tool_id: AKkyeii4dkxVRMWV4uKifYUs78MbhXb9n6q123NYuZH6PSJlHOd09MWQwT3mDDT123Cp5HHygBontbbOog2eISSaNg117117
  name: Docson
  user: lbovet
  details: Documentation for your JSON types
  post_date: "2016-07-11 19:58:33"
  url: https://github.com/lbovet/docson
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "42"
  followers: "250"
  watchers: "250"
  tags:
  - GitHub
  - Definitions
  - Data Specifications
- tool_id: MTtFiPBDgtoqzugDEJUBWdDz8uAbHg6MSAPBa4ryRygrrtP0a123MlurRAIV5LTg0soS0LR2y4WiZaVleoX6IWBg117117
  name: HAL
  user: ""
  details: HAL is a simple format that gives a consistent and easy way to hyperlink
    between resources in your API. Adopting HAL will make your API explorable, and
    its documentation easily discoverable from within the API itself. In short, it
    will make your API easier to work with and therefore more attractive to client
    developers. APIs that adopt HAL can be easily served and consumed using open source
    libraries available for most major programming languages. Its also simple enough
    that you can just deal with it as you would any other JSON.
  post_date: "2014-07-25 17:27:37"
  url: http://stateless.co/hal_specification.html
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/bw-github.jpg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Media Type
  - Hypermedia
  - Design
  - Definitions
- tool_id: 85280YOaZtaFJZ6S5idf1QtduuX2Gg1rotNCBUzq6xGZ285aeopIQZ51hcBcrK116LYkH4WbfUxdrCddqP6p0NsQ117117
  name: Home Documents for HTTP APIs
  user: ""
  details: JSON Home Document is an HTTP API definition formated that follows the
    RFC4627 specification, and has the media type application/json-home.
  post_date: "2015-07-30 19:12:17"
  url: http://tools.ietf.org/html/draft-nottingham-json-home-02
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/ietf-logo.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Design
  - Definitions
- tool_id: Xa7CKO5Qb116sRFhHNHdpr03el9sJAp0cCsmuqvPiCQazpmG1KoluIfOf0vfwMvscVRUrzo4mQ6WzglaeEU8DsHg117117
  name: I/O Docs
  user: ""
  details: I/O Docs is a live interactive documentation system for RESTful web APIs.
    By defining APIs at the resource, method and parameter levels in a JSON schema,
    I/O Docs will generate a JavaScript client interface. API calls can be executed
    from this interface, which are then proxied through the I/O Docs server with payload
    data cleanly formatted (pretty-printed if JSON or XML).
  post_date: "2013-02-02 20:12:13"
  url: https://github.com/mashery/iodocs
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/io-docs-logo.jpg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Definitions
- tool_id: 9gX7JikJblzfmuD50DXX62ooasa35k0vccjVKSvsIM2116D8bQ0ouU5525cci116Ad6NBvZ2CaFo6e3PP5sfnsH123PA117117
  name: Interpol
  user: ""
  details: Interpol is a toolkit for policing your HTTP JSON interface. To use it,
    define the endpoints of your HTTP API in simple YAML files. Interpol provides
    multiple tools to work with endpoint definitions.
  post_date: "2015-07-30 23:38:45"
  url: https://github.com/seomoz/interpol
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/interpol-logo.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Design
  - Definitions
- tool_id: srMhDgJIL116imrWM9haaChZSQovzYVaNv7fuDZo8hWLypJ0xzS123eZStURZ6SZNnkTbDY4t1MifSNw87w5uer01Q117117
  name: interpol
  user: seomoz
  details: A toolkit for working with API endpoint definition files, giving you a
    stub app, a schema validation
  post_date: "2016-07-25 23:21:44"
  url: https://api.github.com/repos/seomoz/interpol
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "13"
  followers: "187"
  watchers: "187"
  tags:
  - GitHub
  - Definitions
- tool_id: 12jXk6ZDKDfZka9wOWD19SzCRtJdoatHS8sOjWhGMqLVIkQ30obdpMCgp116Zgge3RxO123FF2C123EUMarJcJFzPU6Q117117
  name: JSON API
  user: ""
  details: "If youve\u200B ever argued with your team about the way your JSON responses
    should be formatted, JSON API is your anti-bikeshedding weapon. By following shared
    conventions, you can increase productivity, take advantage of generalized tooling,
    and focus on what matters: your application. Clients built around JSON API are
    able to take advantage of its features around efficiently caching responses, sometimes
    eliminating network requests entirely."
  post_date: "2015-07-10 18:54:07"
  url: http://jsonapi.org/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/json-api-logo.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Media Type
  - Design
  - Definitions
- tool_id: IaucsN21piqRpJJtAsoURUBkHzV5ubbFXH9Qe2eEBhz9iDEhtjr1230az6pLRFtNJmF2jRUhfEWiltQNLPWvOiJQ117117
  name: JSON Schema
  user: ""
  details: Describes your JSON data format in clear, human- and machine-readable documentation
    that is complete structural validation, useful for automated testing, and validating
    client-submitted data.
  post_date: "2015-07-30 23:49:15"
  url: http://json-schema.org/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/json-schema.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Definitions
  - Data Specifications
- tool_id: 9fuc7nmB5owOG116kdx123Hyp1WogcB9iCLKBUXbHs03PMkLy7Xi3v7kaf1y2jlj6A9Lueu7XQ7HT4esmSxYu1wOvg117117
  name: json-api
  user: json-api
  details: A specification for building JSON APIs
  post_date: "2016-08-04 18:12:37"
  url: https://github.com/json-api/json-api
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "449"
  followers: "3914"
  watchers: "3914"
  tags:
  - GitHub
  - Definitions
- tool_id: vJW7zflD7MQBkvtcmtIHllMUeB4jqbYimuuIwJpnwVDDQLAS2vEOrVdMZcKvxJenjA1pjcWKalcC5116Y5NL6cQg117117
  name: JSON-LD
  user: ""
  details: JSON-LD is a lightweight Linked Data format. It is easy for humans to read
    and write. It is based on the already successful JSON format and provides a way
    to help JSON data interoperate at Web-scale. JSON-LD is an ideal data format for
    programming environments, REST Web services, and unstructured databases such as
    CouchDB and MongoDB.
  post_date: "2014-12-19 10:57:24"
  url: http://json-ld.org/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/json-ld.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Semantics
  - Media Type
  - Hypermedia
  - Design
  - Definitions
- tool_id: RjFqmaiyGP6ruHy116ZklOLQQnsxvMnSS8cwp66yIJI1mS60r7FOMckVKOnV8VNVKlB5C6MSbjdX9QYxe1FDz9tw117117
  name: JSON-RPC 2.0
  user: ""
  details: JSON-RPC is a stateless, light-weight remote procedure call (RPC) protocol.
    Primarily this specification defines several data structures and the rules around
    their processing. It is transport agnostic in that the concepts can be used within
    the same process, over sockets, over http, or in many various message passing
    environments. It uses JSON (RFC 4627) as data format.
  post_date: "2015-07-30 23:53:52"
  url: http://www.jsonrpc.org/specification
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/json-rpc.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Definitions
  - Data Specifications
- tool_id: 3q1QoAmIUvPJX2F6QLLE1x729shI123esSy8D772d0O0NudPHKqCQ123vG5H5XFQhf4s0OpF3PTzGUFT10Sq6IqD3g117117
  name: loopback-connector-swagger
  user: strongloop
  details: Connect Loopback to a Swagger-compliant API
  post_date: "2016-07-17 22:31:38"
  url: https://api.github.com/repos/strongloop/loopback-connector-swagger
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "0"
  followers: "1"
  watchers: "1"
  tags:
  - GitHub
  - Definitions
- tool_id: JHcQJNL3GhQAYRJpZ308SGFncGm4XCT1tZbR0r9hAxKkVcv4KGITT8D1237KzP4crwds116vtjQBeU1164kLXaWOsj1A117117
  name: Markdown Syntax for Object Notation (MSON)
  user: ""
  details: MSON is a plain-text, human and machine readable, description format for
    describing data structures in common markup formats such as JSON, XML or YAML.
  post_date: "2015-07-30 23:40:36"
  url: https://github.com/apiaryio/mson
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/bw-api-blueprint-icon.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Definitions
  - Data Specifications
- tool_id: WAfIg8637yn8mZXAMqCYg25BvkMqbXzdClCqd1w116agA2M5N9Lu2OyhqjWzqvcfHB6aLwmq123rTrozY5p4RMI8TQ117117
  name: Mason
  user: ""
  details: Mason is a JSON format for introducing hypermedia elements to classic JSON
    data representations. With Mason, you get hypermedia elements for linking and
    modifying data, features for communicating to client developers and standardized
    error handling. Mason is built on JSON, reads JSON, writes JSON and generally
    fits well into a JSON based eco-system.
  post_date: "2014-12-19 10:59:17"
  url: https://github.com/JornWildt/Mason
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/jorn-wildt.jpeg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Media Type
  - Hypermedia
  - Design
  - Definitions
- tool_id: UG133tiBhLOG4B3WjEnXIF116ZrJEbJ9b85FN94123CJ17I0PxgMPKnoYsYpvrYWAS558K7e116mfLdaCfoSZBLEdwSg117117
  name: ODataSamples
  user: odata
  details: 'Samples: For ODataLib, OData Web API, RESTier, etc.'
  post_date: "2016-07-17 20:07:30"
  url: https://api.github.com/repos/OData/ODataSamples
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "76"
  followers: "68"
  watchers: "68"
  tags:
  - GitHub
  - Definitions
- tool_id: 4LNYveq21gLld15eIZhmDhoGpn5YzDliVV3zSdXGVAe5v6HOAtJRewOcg3eCRhfoM0mIiXE1LCd4wWtaxDxftg117117
  name: Open Data Protocol (OData)
  user: ""
  details: OData (Open Data Protocol) is an OASIS standard that defines the best practice
    for building and consuming RESTful APIs. OData helps you focus on your business
    logic while building RESTful APIs without having to worry about the approaches
    to define request and response headers, status codes, HTTP methods, URL conventions,
    media types, payload formats and query options etc.
  post_date: "2015-07-30 22:03:30"
  url: http://www.odata.org/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/odata-logo.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Design
  - Definitions
  - Data Specification
- tool_id: SwNxHJWgQiR6e9bt4Xm1WAe9s1JE529AP5tSPMiwa3fQXVBmuxg5pLOmPDU2QCEAKtBQ116SZaj6u3tHCAazP8jw117117
  name: OpenAPI Specification
  user: OAI
  details: The goal of The OpenAPI Specification is to define a standard, language-agnostic
    interface to REST APIs which allows both humans and computers to discover and
    understand the capabilities of the service without access to source code, documentation,
    or through network traffic inspection. When properly defined via OpenAPI, a consumer
    can understand and interact with the remote service with a minimal amount of implementation
    logic. Similar to what interfaces have done for lower-level programming, OpenAPI
    removes the guesswork in calling the service.
  post_date: "2016-03-11 23:16:54"
  url: https://github.com/OAI/OpenAPI-Specification
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/openapi-spec.png
  forks: "940"
  followers: "3107"
  watchers: "3107"
  tags:
  - Specification
  - GitHub
  - Design
  - Definitions
- tool_id: N6dYL123IzqO6tXSyiIOR3hWVKLLmolHANR123fRKn6YEGS5beHHWF5eivoQkzGboPQHwBAxAjJAPXor2BQ64ANlWw117117
  name: Paw API Blueprint Generator
  user: apiaryio
  details: Paw extension providing support to export API Blueprint as a code generator,
    allowing for you to publish API definitions from the web API client tooling.
  post_date: "2015-05-14 12:45:02"
  url: https://github.com/apiaryio/Paw-APIBlueprintGenerator/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/paw-api-client.png
  forks: "1"
  followers: "10"
  watchers: "10"
  tags:
  - Generator
  - Definitions
  - Client
  - API Blueprint
- tool_id: Xv33ykMkcKnpnCje82i0buRuEn3uOOE123HdSCM3MjcrkAoL4GaHguofzmtlDJHote55jMdJOSyxK021FME7iLgw117117
  name: Paw-PostmanEnvironmentImporter
  user: luckymarmot
  details: A Paw Extension to import Postman Environments.
  post_date: "2016-07-17 22:46:27"
  url: https://api.github.com/repos/luckymarmot/Paw-PostmanEnvironmentImporter
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "0"
  followers: "5"
  watchers: "5"
  tags:
  - GitHub
  - Definitions
  - Client
- tool_id: lvnLDDg7rZL7vzjpkI116ZatSgnIoauOt0dr1Wu12348ksR59TYJZYqw6Sj1163xhDFaTeFA31Bp3vGhR1rnix2ebFIQ117117
  name: Paw-PostmanImporter
  user: luckymarmot
  details: A Paw Extension to import Postman Collections.
  post_date: "2016-07-17 22:46:42"
  url: https://api.github.com/repos/luckymarmot/Paw-PostmanImporter
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "0"
  followers: "5"
  watchers: "5"
  tags:
  - GitHub
  - Definitions
  - Client
- tool_id: J116aMGr6i5PdZ4123dslOGduDKbLZxKKkC4hLuZmPctJpbloOVKXjIRZkZe6lARi5IchRWfpwVyPfHv1nR3vOjKqQ117117
  name: Paw-WADLImporter
  user: luckymarmot
  details: WADL Importer for Paw
  post_date: "2016-07-17 22:46:04"
  url: https://api.github.com/repos/luckymarmot/Paw-WADLImporter
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "0"
  followers: "0"
  watchers: "0"
  tags:
  - GitHub
  - Definitions
  - Client
- tool_id: UVg0ZUeLGbwoigjtPQs6fC116NR116khLaqXuf9QHy116QKYEBsF49g116Xf2HZ1m6MbbKzWNdEuEY9FKms4DI3YVG7m4A117117
  name: Postman Collections
  user: ""
  details: A collection lets you group individual requests together. These requests
    can be further organized into folders to accurately mirror your API. Requests
    can also store sample responses when saved in a collection. You can add metadata
    like name and description too so that all the information that a developer needs
    to use your API is available easily.
  post_date: "2015-07-30 23:44:35"
  url: https://www.getpostman.com/docs/collections
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/postman-rest-logo.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Definitions
- tool_id: F6lz5S116Q0M5GLZa123HJme1bcx8IBHqZPlW116HjzeafL1236gwpmJiCRjRba5huuAtav0hFL38CYVeeH2116pIMWJoaEw117117
  name: prism
  user: stoplightio
  details: Turn any OAS (Swagger 2) file into an API server with mocking, transformations,
    validations, and mor
  post_date: "2016-07-17 22:50:49"
  url: https://api.github.com/repos/stoplightio/prism
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "3"
  followers: "7"
  watchers: "7"
  tags:
  - Proxy
  - GitHub
  - Definitions
- tool_id: Hvof3w4XF1beSuFuKslQ2y10WGbQ0U06JtYvWP30yvW917PcENQFxhyc9n9RyS3TH3cfIhpUKc74gEi4CBPUgQ117117
  name: RAML Specification
  user: ""
  details: RESTful API Modeling Language (RAML) is a simple and succinct way of describing
    practically-RESTful APIs. It encourages reuse, enables discovery and pattern-sharing,
    and aims for merit-based emergence of best practices. The goal is to help our
    current API ecosystem by solving immediate problems and then encourage ever-better
    API patterns. RAML is built on broadly-used standards such as YAML and JSON and
    is a non-proprietary, vendor-neutral open spec.
  post_date: "2015-06-30 14:05:03"
  url: http://raml.org
  blog_url: http://blog.raml.org/
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/raml-logo.jpg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - RAML
  - Design
  - Definitions
- tool_id: HSDjVts1IVhdAcM1qSS4KkseodhPPro8RS3jEo2p7hGbEbZ0bdmOtkUwcUp8yFlN80mmP1jpFeMwuvIInFT8GQ117117
  name: raml2postman
  user: postmanlabs
  details: Coverts RAML specs to Postman Collections (v1 of the collection format)
  post_date: "2016-07-17 22:48:54"
  url: https://api.github.com/repos/postmanlabs/raml2postman
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "2"
  followers: "12"
  watchers: "12"
  tags:
  - GitHub
  - Definitions
  - Conversion
  - Client
- tool_id: Nk5K78DgH0na3YtV4JW5V347f1i3bE123JR4y3GpWz1116k6sPsDqX116jiJpBSoppIsleaXlnoBafnnPtjyFtHMLHpQ117117
  name: ReDoc
  user: Rebilly
  details: OpenAPI/Swagger-generated API Reference Documentation
  post_date: "2016-09-28 20:22:54"
  url: https://github.com/Rebilly/ReDoc
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "24"
  followers: "217"
  watchers: "217"
  tags:
  - GitHub
  - Definitions
- tool_id: OeiX4a2gxt2K12gimiOfETcpsTI03QSaCj9tfMzyDlb7436CzzlG3116TmoYu4dp9Md1WubwPAA123yMFmwBaPPd6g117117
  name: RESTdesc
  user: ""
  details: 'Semantic descriptions for hypermedia APIs. RESTdesc allows you to capture
    the functionality of hypermedia APIs, so automated agents can use them. Despite
    their powerful capabilities, RESTdesc descriptions are easy to master. The description
    is not a goal in itself: you want your API to be used. See how RESTdesc opens
    up your API for discovery, based on its functional characteristics.'
  post_date: "2015-07-31 00:00:13"
  url: http://restdesc.org/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/restdesc-logo.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Media Type
  - Hypermedia
  - Design
  - Definitions
- tool_id: tAGvGx5j9lyhMw0o7v4MLROMRaDN2WpfNHgrqqY7X2fE07NlnqXlDAHslfAxgQtjw21tma8WReIc123jPbJOJ9123Q117117
  name: RESTful API Description Language (RADL)
  user: ""
  details: RESTful API Description Language (RADL) is an XML vocabulary for describing
    Hypermedia-driven RESTful APIs. Unlike most HTTP API description languages, RADL
    focuses on defining a truly hypermedia-driven REST API from the clients point
    of view. Unlike description languages based on JSON or Markdown, RADL makes it
    easy to integrate documentation written in HTML or XML. The APIs that RADL describes
    may use any media type, in XML, JSON, HTML, or any other format.
  post_date: "2015-07-11 16:49:06"
  url: https://github.com/restful-api-description-language/RADL
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/radl-logo.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Design
  - Definitions
- tool_id: 12kxiXXSnv116Cl9cn116BB6vPI6qmCb6pQA9CScee116SB4O3L3Lrer1APq9P8ieKtrdg8VlXzH08VwBHLF22BVp4ww117117
  name: RESTful API Modeling Language
  user: ""
  details: RESTful API Modeling Language (RAML) is a simple and succinct way of describing
    practically-RESTful APIs. It encourages reuse, enables discovery and pattern-sharing,
    and aims for merit-based emergence of best practices. The goal is to help our
    current API ecosystem by solving immediate problems and then encourage ever-better
    API patterns. RAML is built on broadly-used standards such as YAML and JSON and
    is a non-proprietary, vendor-neutral open spec.
  post_date: "2013-12-22 23:45:15"
  url: http://raml.org/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/raml-logo.jpg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Definitions
- tool_id: iK1FRMQQa7cfzWVIOSTPuxoWW0xDyaosvRqyxqaxZB2r8hykwmY47123Smm74wR4XJJr1235bSHlJglALrjzMeX7kw117117
  name: RESTful Service Description Language (RSDL)
  user: ""
  details: The RESTful Service Description Language (RSDL) is a machine- and human-readable
    XML description of HTTP-based web applications (typically REST web services).
  post_date: "2015-07-30 23:12:42"
  url: http://www.balisage.net/Proceedings/vol10/html/Robie01/BalisageVol10-Robie01.html
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/rsdl-icon.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Design
  - Definitions
- tool_id: OcvweWajvcYNRJndT1fR3123BpE116bXZp4l5116DDRJiUnUEsxUyR3123uIwRvqS2U6l9g116Mx4VFmwRDq0xVV2hO8pbnQ117117
  name: Rspec APIBlueprint
  user: ""
  details: Autogeneration of API documentation using the Blueprint format from request
    specs.
  post_date: "2014-06-15 13:13:42"
  url: https://github.com/playround/rspec_api_blueprint
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/api-blueprint.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Generator
  - Generation
  - Definitions
- tool_id: 8ZKvLX2dlnwdAky0zKg2jjSGI3MmIfk0ZNT8lLqAWBm7LKQtvdM581161zRC1FsUZ1o7M116yqvH5h123nyx5tUMkZSg117117
  name: Schema.org
  user: ""
  details: Schema.org is a collaborative, community activity with a mission to create,
    maintain, and promote schemas for structured data on the Internet, on web pages,
    in email messages, and beyond. Schema.org vocabulary can be used with many different
    encodings, including RDFa, Microdata and JSON-LD.
  post_date: "2015-07-10 17:39:35"
  url: http://schema.org/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/schema-org-logo.jpeg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Definitions
- tool_id: d7ryWD2GRy0pve5Kga2LGF64izlVEc3oZlecYLUHQ4ffORmxBfL6tdBErZ4uz5ybaFVJFpUW0H33FPwTH0tzAQ117117
  name: schemas
  user: postmanlabs
  details: Repository of all schemas for JSON structures compatible with Postman (such
    as the Postman Collectio
  post_date: "2016-07-17 22:49:13"
  url: https://api.github.com/repos/postmanlabs/schemas
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "8"
  followers: "4"
  watchers: "4"
  tags:
  - Schemas
  - GitHub
  - Definitions
- tool_id: eYiK3pS7TRL6116EdvrvG116ZSrhfv2dzHvZGU5KUWHToVDrS123YqtY9hJVPenjiKln07eBxh1skz84da40qoqeRTfA117117
  name: Siren
  user: ""
  details: Siren is a hypermedia specification for representing entities. As HTML
    is used for visually representing documents on a Web site, Siren is a specification
    for presenting entities via a Web API. Siren offers structures to communicate
    information about entities, actions for executing state transitions, and links
    for client navigation.
  post_date: "2014-12-19 10:54:55"
  url: ""
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/kevin-swiber.jpeg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Media Type
  - Hypermedia
  - Design
  - Definitions
- tool_id: 1lfA123hQxgQ5pSeyQOks4M3qgUEX2koLYAUp1ibs0Tu2dIqx3cA8toJq7Hw0mPq9Ev7NADLIJ1GUxZRaCdTlv123Q117117
  name: skinfer
  user: scrapinghub
  details: Skinfer is a tool for inferring and merging JSON schemas
  post_date: "2016-07-26 00:06:44"
  url: https://api.github.com/repos/scrapinghub/skinfer
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "6"
  followers: "48"
  watchers: "48"
  tags:
  - Merging
  - GitHub
  - Definitions
- tool_id: IOgNZxaFF116sgf123fwlamR4Vg7Vvz7u5116I3knrjGxconiR116XRgl00EleMV88ZkdipsUcempj116NEFy700D81ECUMg117117
  name: Snowcrash
  user: apiaryio
  details: Snow Crash is the reference API Blueprint parser built on top of the Sundown
    Markdown parser.
  post_date: "2015-05-14 12:42:39"
  url: https://github.com/apiaryio/snowcrash/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/bw-api-blueprint-icon.png
  forks: "42"
  followers: "265"
  watchers: "265"
  tags:
  - Parser
  - GitHub
  - Definitions
  - API Blueprint Core
  - API Blueprint
- tool_id: vCLAJz123H18XEKDq92qp116VyfOJpIuXZvB116sQnfYm116xDL03G116O1KT116nGzGJ4LvN8UScZOITp9LuK4SzX7Hcbs0ow117117
  name: swagger-editor
  user: swagger-hub
  details: Swagger Editor
  post_date: "2016-07-17 22:51:45"
  url: https://api.github.com/repos/swagger-hub/swagger-editor
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "0"
  followers: "0"
  watchers: "0"
  tags:
  - IDE
  - GitHub
  - Definitions
- tool_id: 1Wv6F8116LcvnQ42hfwFo76GLg1sc2o3JT2fH9rw4hDH17QYe4q1HBgcK3NQQS6KgbVlBg5UGYD123WTOE123p123fm4tw117117
  name: swagger-ui
  user: swagger-hub
  details: Swagger UI is a dependency-free collection of HTML, Javascript, and CSS
    assets that dynamically gene
  post_date: "2016-07-17 22:52:03"
  url: https://api.github.com/repos/swagger-hub/swagger-ui
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "0"
  followers: "0"
  watchers: "0"
  tags:
  - GitHub
  - Documentation
  - Definitions
- tool_id: 7IEuTTPAXEV3bz0eJih0OybyBV9y0gtFrx0KF1Tekb1j252Djj4nu1fruSvOQjjEr2Iy2MR0vt9TCsHU2XH3Uw117117
  name: swagger2-to-postman
  user: postmanlabs
  details: Converter for swagger 2.0 JSON to Postman Collection
  post_date: "2016-07-17 22:49:47"
  url: https://api.github.com/repos/postmanlabs/swagger2-to-postman
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "12"
  followers: "21"
  watchers: "21"
  tags:
  - GitHub
  - Definitions
  - Conversion
  - Client
- tool_id: rs2Cy1116nW6S4m1237FFZqnlL3aJtNmnSo123Nbpf6eKb4N116tt6jAnjHrOiQS51qgU123gkUbK4SYeJPyW2v1ZD7a5SJg117117
  name: Swagger2RAML
  user: ""
  details: A utility to generate RAML documentation from OpenAPI Specification.
  post_date: "2014-06-15 13:09:11"
  url: https://github.com/8x8Cloud/swagger2raml
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/raml-logo.jpg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Swagger
  - Definitions
  - Converter
- tool_id: s123sxFL0QA123mi0cXVAwgWTrEsxsOKdnMfuWH123uRMS6AcjFsjsSKQiXTTsHxVQmQTIuGAB3123NKLtDIrELODaMOSw117117
  name: tyk-swagger-definitions
  user: TykTechnologies
  details: Tyk swagger (OpenAPI) definition files
  post_date: "2016-07-17 22:35:09"
  url: https://api.github.com/repos/TykTechnologies/tyk-swagger-definitions
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-github.png
  forks: "2"
  followers: "0"
  watchers: "0"
  tags:
  - GitHub
  - Definitions
- tool_id: 9WomN7BhvN3LLo95116S105Rk116RDC7uyilxQXW4XAWuYxZbuo1160sqtP9afwrDgjKYmoLUwpyTj1B0116A84123NPoanA117117
  name: UBER
  user: ""
  details: The Uber message format is a minimal read/write hypermedia type designed
    to support simple state transfers and ad-hoc hypermedia-based transitions. This
    document describes both the XML and JSON variants of the format and provides guidelines
    for supporting Uber messages over the HTTP protocol.
  post_date: "2014-07-25 18:05:16"
  url: https://rawgit.com/mamund/media-types/master/uber-hypermedia.html
  blog_url: ""
  blog_rss_url: ""
  twitter_url: 'http://twitter.com/uberhypermedia '
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/madmen_icon_400x400.jpg
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Hypermedia
  - Design
  - Definitions
- tool_id: J2ljRQEWSDd92YjRYKb2txIqKhxhh4FzBfz3uilwje4DN90rCyiLB6eKXWpDa6NeHQpquqlF83ZB3Wdi0EnvCg117117
  name: Web Application Description Language (WADL)
  user: ""
  details: The Web Application Description Language (WADL) is a machine-readable XML
    description of HTTP-based web applications (typically REST web services). WADL
    models the resources provided by a service and the relationships between them.
    WADL is intended to simplify the reuse of web services that are based on the existing
    HTTP architecture of the Web. It is platform and language independent and aims
    to promote reuse of applications beyond the basic use in a web browser.
  post_date: "2015-07-11 16:36:02"
  url: https://wadl.java.net/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/wadl-icon.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Design
  - Definitions
- tool_id: 5IRX49oA1WFOOq39I1kP3A11TqOT4DnwtQgDtAO5RzKGCLrTnqQmwe2tC7spV34Aw9xFSffpI116O19UO0943kZQ117117
  name: Web Resource Modeling Language (WRML)
  user: wrml
  details: WRML, the Web Resource Modeling Language, is a domain-specific modeling
    language thats oriented toward the design of REST APIs.
  post_date: "2016-03-11 22:25:09"
  url: http://tool.api.kinlane.com/tool/fromgithub/
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/wrml-logo.png
  forks: "7"
  followers: "13"
  watchers: "13"
  tags:
  - Specification
  - GitHub
  - Design
  - Definitions
- tool_id: p5BtkXPjm123rSHmmKD3LsSLNLGr80ZAJuVtUkmY1238bkxbj3Cgkfor6Dnq91234CeFxBuLSLnwzF9fmzT0gO51On2A117117
  name: Web Services Description Language (WSDL)
  user: ""
  details: WSDL is an XML format for describing network services as a set of endpoints
    operating on messages containing either document-oriented or procedure-oriented
    information. The operations and messages are described abstractly, and then bound
    to a concrete network protocol and message format to define an endpoint. Related
    concrete endpoints are combined into abstract endpoints (services). WSDL is extensible
    to allow description of endpoints and their messages regardless of what message
    formats or network protocols are used to communicate, however, the only bindings
    described in this document describe how to use WSDL in conjunction with SOAP 1.1,
    HTTP GET/POST, and MIME.
  post_date: "2015-07-11 16:31:23"
  url: http://www.w3.org/TR/wsdl
  blog_url: ""
  blog_rss_url: ""
  twitter_url: ""
  github_url: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/wsdl-icon.png
  forks: 0
  followers: 0
  watchers: 0
  tags:
  - Specification
  - Design
  - Definitions